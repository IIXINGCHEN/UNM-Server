version: '3.8'

services:
  # UNM-Server API 服务
  unm-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: unm-server-v2
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - NODE_ENV=production
      - PORT=5678
      - DATABASE_URL=${DATABASE_URL:-postgresql://unm:password@postgres:5432/unm_server}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - CACHE_TTL=${CACHE_TTL:-3600}
      - ALLOWED_DOMAIN=${ALLOWED_DOMAIN:-*}
    depends_on:
      - postgres
      - redis
    networks:
      - unm-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5678/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: unm-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-unm_server}
      - POSTGRES_USER=${POSTGRES_USER:-unm}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/database/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - unm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-unm} -d ${POSTGRES_DB:-unm_server}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: unm-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    networks:
      - unm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: unm-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - unm-api
    networks:
      - unm-network
    profiles:
      - with-nginx

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  unm-network:
    driver: bridge
